# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

variables: 
  BuildConfiguration: 'release'
  # nombre del archivo csproj
  name-project: "trifenix.exception"
  folder: "trifenix.exception/"

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    vstsFeed: '$(default-feed)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
  displayName: "build solution"


- script: |      
    sudo apt install -y unzip
    wget https://scripts.trifenix.io/vsxmd/Vsxmd.$(vsxmd-version-production).zip
    unzip Vsxmd.$(vsxmd-version-production).zip -d ./vsxmd.$(vsxmd-version-production)    
    dotnet ./vsxmd.$(vsxmd-version-production)/Vsxmd.dll ./$(folder)$(name-project).xml nuget-packages
    git config --global user.email "devops@trifenix.io"
    git config --global user.name "devops"    
    git clone https://alejandro.iglesias:$(script-token)@github.com/trifenix/docs-trifenix-connect.git web
    ls -l
    cp -r ./$(folder)nuget-packages/* ./web/src/pages/nuget-packages
    cd ./web
    git add . && git commit -m 'nueva documentacion mdm' 
    git push origin master
  displayName: "publicando documentaci√≥n"

